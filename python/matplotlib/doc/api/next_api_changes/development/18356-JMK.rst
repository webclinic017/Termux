FigureBase class added, and Figure class made a child
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The new subfigure feature motivated some re-organization of the
`.figure.Figure` class, so that the new `.figure.SubFigure` class could have
all the capabilities of a figure.

The `.figure.Figure` class is now a subclass of `.figure.FigureBase`, where
`.figure.FigureBase` contains figure-level artist addition routines, and
the `.figure.Figure` subclass just contains features that are unique to the
outer figure.

Note that there is a new *transSubfigure* transform
associated with the subfigure.  This transform also exists for a
`.Figure` instance, and is equal to *transFigure* in that case,
so code that uses the transform stack that wants to place objects on either
the parent figure or one of the subfigures should use *transSubfigure*.
