# Circle CI configuration file
# https://circleci.com/docs/

version: 2.1


#######################################
# Define some common steps as commands.
#

commands:
  apt-install:
    steps:
      - run:
          name: Install apt packages
          command: |
            sudo apt -qq update
            sudo apt install -y \
              inkscape \
              ffmpeg \
              dvipng \
              lmodern \
              cm-super \
              texlive-latex-base \
              texlive-latex-extra \
              texlive-fonts-recommended \
              texlive-latex-recommended \
              texlive-pictures \
              texlive-xetex \
              graphviz \
              fonts-crosextra-carlito \
              fonts-freefont-otf \
              fonts-humor-sans \
              optipng

  fonts-install:
    steps:
      - restore_cache:
          key: fonts-2
      - run:
          name: Install custom fonts
          command: |
            mkdir -p ~/.local/share/fonts
            wget -nc https://github.com/google/fonts/blob/master/ofl/felipa/Felipa-Regular.ttf?raw=true -O ~/.local/share/fonts/Felipa-Regular.ttf || true
            fc-cache -f -v
      - save_cache:
          key: fonts-2
          paths:
            - ~/.local/share/fonts/

  pip-install:
    description: Upgrade pip and setuptools and wheel to get as clean an install as possible
    steps:
      - run:
          name: Upgrade pip, setuptools, wheel
          command: |
            python -mpip install --upgrade --user pip
            python -mpip install --upgrade --user wheel
            python -mpip install --upgrade --user setuptools

  deps-install:
    parameters:
      numpy_version:
        type: string
        default: ""
    steps:
      - run:
          name: Install Python dependencies
          command: |
            python -mpip install --user numpy<< parameters.numpy_version >> codecov coverage
            python -mpip install --user -r requirements/doc/doc-requirements.txt

  mpl-install:
    steps:
      - run:
          name: Install Matplotlib
          command: python -mpip install --user -ve .

  doc-build:
    steps:
      - restore_cache:
          keys:
            - sphinx-env-v1-{{ .BuildNum }}-{{ .Environment.CIRCLE_JOB }}
            - sphinx-env-v1-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Build documentation
          command: |
            # Set epoch to date of latest tag.
            export SOURCE_DATE_EPOCH="$(git log -1 --format=%at $(git describe --abbrev=0))"
            # Include analytics only when deploying to devdocs.
            if [ "$CIRCLE_PROJECT_USERNAME" != "matplotlib" ] || \
               [ "$CIRCLE_BRANCH" != "master" ] || \
               [[ "$CIRCLE_PULL_REQUEST" == https://github.com/matplotlib/matplotlib/pull/* ]]; then
              export ANALYTICS=False
            else
              export ANALYTICS=True
            fi
            make html O="-T -Ainclude_analytics=$ANALYTICS"
            rm -r build/html/_sources
          working_directory: doc
      - save_cache:
          key: sphinx-env-v1-{{ .BuildNum }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - doc/build/doctrees

  doc-bundle:
    steps:
      - run:
          name: Bundle sphinx-gallery documentation artifacts
          command: tar cf doc/build/sphinx-gallery-files.tar.gz doc/api/_as_gen doc/gallery doc/tutorials
          when: always
      - store_artifacts:
          path: doc/build/sphinx-gallery-files.tar.gz


##########################################
# Here is where the real jobs are defined.
#

jobs:
  docs-python37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - apt-install
      - fonts-install
      - pip-install

      - deps-install
      - mpl-install

      - doc-build

      - doc-bundle

      - store_artifacts:
          path: doc/build/html

  docs-python38-min:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout

      - apt-install
      - fonts-install
      - pip-install

      - deps-install:
          numpy_version: "==1.16.0"
      - mpl-install

      - doc-build

      - doc-bundle

      - store_artifacts:
          path: doc/build/html

  docs-python38:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout

      - apt-install
      - fonts-install
      - pip-install

      - deps-install
      - mpl-install

      - doc-build

      - doc-bundle

      - store_artifacts:
          path: doc/build/html

      - add_ssh_keys:
          fingerprints:
            - "78:13:59:08:61:a9:e5:09:af:df:3a:d8:89:c2:84:c0"
      - deploy:
          name: "Deploy new docs"
          command: ./.circleci/deploy-docs.sh

#########################################
# Defining workflows gets us parallelism.
#

workflows:
  version: 2
  build:
    jobs:
      - docs-python37
      - docs-python38
      - docs-python38-min
