diff -u -r ../libuv-v1.9.1/src/unix/internal.h ./src/unix/internal.h
--- ../libuv-v1.9.1/src/unix/internal.h	2016-05-16 17:22:19.000000000 -0400
+++ ./src/unix/internal.h	2016-05-18 10:48:45.456553752 -0400
@@ -55,14 +55,6 @@
 # include <CoreServices/CoreServices.h>
 #endif
 
-#if defined(__ANDROID__)
-int uv__pthread_sigmask(int how, const sigset_t* set, sigset_t* oset);
-# ifdef pthread_sigmask
-# undef pthread_sigmask
-# endif
-# define pthread_sigmask(how, set, oldset) uv__pthread_sigmask(how, set, oldset)
-#endif
-
 #define ACCESS_ONCE(type, var)                                                \
   (*(volatile type*) &(var))
 
diff -u -r ../libuv-v1.9.1/src/unix/pthread-fixes.c ./src/unix/pthread-fixes.c
--- ../libuv-v1.9.1/src/unix/pthread-fixes.c	2016-05-16 17:22:19.000000000 -0400
+++ ./src/unix/pthread-fixes.c	2016-05-18 10:47:54.209328719 -0400
@@ -33,24 +33,3 @@
 #include <errno.h>
 #include <pthread.h>
 #include <signal.h>
-
-int uv__pthread_sigmask(int how, const sigset_t* set, sigset_t* oset) {
-  static int workaround;
-  int err;
-
-  if (workaround) {
-    return sigprocmask(how, set, oset);
-  } else {
-    err = pthread_sigmask(how, set, oset);
-    if (err) {
-      if (err == EINVAL && sigprocmask(how, set, oset) == 0) {
-        workaround = 1;
-        return 0;
-      } else {
-        return -1;
-      }
-    }
-  }
-
-  return 0;
-}
