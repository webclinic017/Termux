diff -uNr apt-1.4.9/apt-pkg/contrib/strutl.cc apt-1.4.9.mod/apt-pkg/contrib/strutl.cc
--- apt-1.4.9/apt-pkg/contrib/strutl.cc	2019-01-18 12:42:07.000000000 +0200
+++ apt-1.4.9.mod/apt-pkg/contrib/strutl.cc	2019-11-12 22:39:32.592335551 +0200
@@ -100,6 +100,7 @@
 }
 }
 									/*}}}*/
+#ifndef __ANDROID__
 // UTF8ToCodeset - Convert some UTF-8 string for some codeset   	/*{{{*/
 // ---------------------------------------------------------------------
 /* This is handy to use before display some information for enduser  */
@@ -169,6 +170,7 @@
 
   return true;
 }
+#endif
 									/*}}}*/
 // strstrip - Remove white space from the front and back of a string	/*{{{*/
 // ---------------------------------------------------------------------
diff -uNr apt-1.4.9/apt-pkg/deb/debrecords.cc apt-1.4.9.mod/apt-pkg/deb/debrecords.cc
--- apt-1.4.9/apt-pkg/deb/debrecords.cc	2019-01-18 12:42:07.000000000 +0200
+++ apt-1.4.9.mod/apt-pkg/deb/debrecords.cc	2019-11-12 22:39:37.975693094 +0200
@@ -25,7 +25,9 @@
 #include <sstream>
 #include <string>
 #include <vector>
+#ifndef __ANDROID__
 #include <langinfo.h>
+#endif
 
 #include <apti18n.h>
 									/*}}}*/
@@ -152,12 +154,14 @@
 	 orig = Section.FindS("Description");
    }
 
+#ifndef __ANDROID__
    char const * const codeset = nl_langinfo(CODESET);
    if (strcmp(codeset,"UTF-8") != 0) {
       string dest;
       UTF8ToCodeset(codeset, orig, &dest);
       return dest;
    }
+#endif
 
    return orig;
 }
diff -uNr apt-1.4.9/apt-private/private-output.cc apt-1.4.9.mod/apt-private/private-output.cc
--- apt-1.4.9/apt-private/private-output.cc	2019-01-18 12:42:07.000000000 +0200
+++ apt-1.4.9.mod/apt-private/private-output.cc	2019-11-12 22:39:43.812385978 +0200
@@ -20,7 +20,11 @@
 #include <string.h>
 #include <iomanip>
 #include <iostream>
-#include <langinfo.h>
+#ifdef __ANDROID__
+#  include <termios.h>
+# else
+#  include <langinfo.h>
+#endif
 #include <unistd.h>
 #include <signal.h>
 #include <sys/ioctl.h>
@@ -717,7 +721,7 @@
    regex_t Pattern;
    int Res;
 
-   Res = regcomp(&Pattern, nl_langinfo(YESEXPR),
+   Res = regcomp(&Pattern, "^[yY]",
                  REG_EXTENDED|REG_ICASE|REG_NOSUB);
 
    if (Res != 0) {
